{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/GitHub/my-app/src/pages/Menu-item/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport './style.css';\nimport Item from '../../components/Item/item';\n\nfunction MenuItem({\n  match\n}) {\n  const [item, setItem] = useState({\n    \"content\": [{}]\n  });\n  useEffect(() => {\n    getItem();\n  });\n\n  const getItem = async () => {\n    const url = `https://surce-delight.herokuapp.com/api/product/small-chops/${match.params.itemId}/`;\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data);\n    setItem(data);\n  };\n\n  let productContents = []; // unpack the products and take all product variations for each product\n\n  let counter = 0;\n\n  for (let product of products) {\n    let currentProductVariation = product.product_variation; // terrible implemtation, but it works\n\n    for (var i = 0; i < currentProductVariation.length; i++) {\n      productContents.push(currentProductVariation[i].content);\n    }\n  } // console.log(productContents)\n\n\n  for (let productContent of productContents) {\n    let currentContent = productContent; // i'm really not proud of this implimentation temporary fix.. run time is 0(n^2)\n\n    for (var i = 0; i < currentContent.length; i++) {\n      const {\n        add_on_item_name,\n        quantity\n      } = currentContent[i];\n      console.log(add_on_item_name, quantity);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"menuItemContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Item, {\n    price: item.price,\n    itemQuantity: item.content[0].quantity,\n    itemDesc: item.content[0].add_on_item_name,\n    name: item.product_type,\n    itemId: item.id,\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }));\n}\n\nexport default MenuItem;","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/my-app/src/pages/Menu-item/index.js"],"names":["React","useState","useEffect","Item","MenuItem","match","item","setItem","getItem","url","params","itemId","response","fetch","data","json","console","log","productContents","counter","product","products","currentProductVariation","product_variation","i","length","push","content","productContent","currentContent","add_on_item_name","quantity","price","product_type","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,4BAAjB;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA2B;AACvB,QAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;AAC9B,eAAW,CAAC,EAAD;AADmB,GAAD,CAA/B;AAIAC,EAAAA,SAAS,CAAE,MAAI;AACbM,IAAAA,OAAO;AACR,GAFQ,CAAT;;AAIA,QAAMA,OAAO,GAAG,YAAW;AACrB,UAAMC,GAAG,GAAI,+DAA8DJ,KAAK,CAACK,MAAN,CAAaC,MAAO,GAA/F;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,CAA5B;AACA,UAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAP,IAAAA,OAAO,CAACO,IAAD,CAAP;AACL,GAND;;AAOA,MAAII,eAAe,GAAG,EAAtB,CAhBuB,CAiBvB;;AACA,MAAIC,OAAO,GAAG,CAAd;;AACA,OAAK,IAAIC,OAAT,IAAoBC,QAApB,EAA8B;AAE5B,QAAKC,uBAAuB,GAAGF,OAAO,CAACG,iBAAvC,CAF4B,CAI5B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,uBAAuB,CAACG,MAA5C,EAAoDD,CAAC,EAArD,EAAyD;AACvDN,MAAAA,eAAe,CAACQ,IAAhB,CAAqBJ,uBAAuB,CAACE,CAAD,CAAvB,CAA2BG,OAAhD;AAED;AAEF,GA7BsB,CA+BvB;;;AAEC,OAAK,IAAIC,cAAT,IAA2BV,eAA3B,EAA2C;AACzC,QAAIW,cAAc,GAAGD,cAArB,CADyC,CAEvC;;AACF,SAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,cAAc,CAACJ,MAAnC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,YAAM;AAACM,QAAAA,gBAAD;AAAoBC,QAAAA;AAApB,UAAgCF,cAAc,CAACL,CAAD,CAApD;AACDR,MAAAA,OAAO,CAACC,GAAR,CAAYa,gBAAZ,EAA+BC,QAA/B;AAEA;AAEF;;AACF,sBACI;AAAS,IAAA,SAAS,EAAC,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACY,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzB,IAAI,CAAC0B,KAAlB;AAAyB,IAAA,YAAY,EAAI1B,IAAI,CAACqB,OAAL,CAAa,CAAb,EAAgBI,QAAzD;AAAmE,IAAA,QAAQ,EAAIzB,IAAI,CAACqB,OAAL,CAAa,CAAb,EAAgBG,gBAA/F;AAAiH,IAAA,IAAI,EAAExB,IAAI,CAAC2B,YAA5H;AAA0I,IAAA,MAAM,EAAI3B,IAAI,CAAC4B,EAAzJ;AAA6J,IAAA,GAAG,EAAE5B,IAAI,CAAC4B,EAAvK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,CADJ;AAKH;;AAED,eAAe9B,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './style.css';\nimport Item from '../../components/Item/item';\n\nfunction MenuItem({match}) {\n    const[item, setItem] = useState({\n      \"content\": [{}]\n    });\n\n    useEffect( ()=>{\n      getItem();\n    });\n\n    const getItem = async () =>{\n          const url = `https://surce-delight.herokuapp.com/api/product/small-chops/${match.params.itemId}/`;\n          const response = await fetch(url);\n          const data = await response.json();\n          console.log(data);\n          setItem(data);\n    }\n    let productContents = []\n    // unpack the products and take all product variations for each product\n    let counter = 0\n    for (let product of products) {\n    \n      let  currentProductVariation = product.product_variation\n    \n      // terrible implemtation, but it works\n      for (var i = 0; i < currentProductVariation.length; i++) {\n        productContents.push(currentProductVariation[i].content)\n    \n      }\n    \n    }\n    \n    // console.log(productContents)\n    \n     for (let productContent of productContents){\n       let currentContent = productContent\n         // i'm really not proud of this implimentation temporary fix.. run time is 0(n^2)\n       for (var i = 0; i < currentContent.length;i++) {\n         const {add_on_item_name , quantity} = currentContent[i]\n        console.log(add_on_item_name , quantity)\n    \n       }\n    \n     }\n    return (\n        <section className=\"menuItemContainer\">\n                    <Item price={item.price} itemQuantity = {item.content[0].quantity} itemDesc = {item.content[0].add_on_item_name} name={item.product_type} itemId = {item.id} key={item.id}/>\n        </section>\n    )\n}\n\nexport default MenuItem;\n"]},"metadata":{},"sourceType":"module"}