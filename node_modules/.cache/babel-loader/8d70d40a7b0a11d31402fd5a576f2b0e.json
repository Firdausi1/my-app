{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/GitHub/my-app/src/pages/Menu/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport MenuList from './menuList';\nimport './style.css';\n\nfunction Menu(props) {\n  console.log(props);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    getProducts();\n  }, []);\n\n  const getProducts = async () => {\n    const url = \"https://surce-delight.herokuapp.com/api/product/all/\";\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data);\n    setProducts(data[0].product_variation);\n  };\n\n  let productContents = []; // unpack the products and take all product variations for each product\n\n  let counter = 0;\n\n  for (let product of products) {\n    let currentProductVariation = product.product_variation; // terrible implemtation, but it works\n\n    for (var i = 0; i < currentProductVariation.length; i++) {\n      productContents.push(currentProductVariation[i].content);\n    }\n  } // console.log(productContents)\n\n\n  for (let productContent of productContents) {\n    let currentContent = productContent; // i'm really not proud of this implimentation temporary fix.. run time is 0(n^2)\n\n    for (var i = 0; i < currentContent.length; i++) {\n      const {\n        add_on_item_name,\n        quantity\n      } = currentContent[i];\n      console.log(add_on_item_name, quantity);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"our-menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Our Menu\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, products.map(product => /*#__PURE__*/React.createElement(MenuList, {\n    name: product.product_type,\n    price: product.current_price,\n    image: product.product_image,\n    itemId: product.id,\n    key: product.id,\n    itemDesc: product.content[0].add_on_item_name,\n    itemQuantity: product.content[0].quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }))));\n}\n\nexport default Menu;","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/my-app/src/pages/Menu/index.js"],"names":["React","useEffect","useState","MenuList","Menu","props","console","log","products","setProducts","getProducts","url","response","fetch","data","json","product_variation","productContents","counter","product","currentProductVariation","i","length","push","content","productContent","currentContent","add_on_item_name","quantity","map","product_type","current_price","product_image","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,aAAP;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAK,CAACG,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAvC;AAEAD,EAAAA,SAAS,CAAE,MAAI;AACbS,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,WAAW,GAAG,YAAW;AACzB,UAAMC,GAAG,GAAG,sDAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACAL,IAAAA,WAAW,CAACK,IAAI,CAAC,CAAD,CAAJ,CAAQE,iBAAT,CAAX;AAED,GAPL;;AAQA,MAAIC,eAAe,GAAG,EAAtB,CAjBmB,CAkBnB;;AACA,MAAIC,OAAO,GAAG,CAAd;;AACA,OAAK,IAAIC,OAAT,IAAoBX,QAApB,EAA8B;AAE5B,QAAKY,uBAAuB,GAAGD,OAAO,CAACH,iBAAvC,CAF4B,CAI5B;;AACA,SAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,uBAAuB,CAACE,MAA5C,EAAoDD,CAAC,EAArD,EAAyD;AACvDJ,MAAAA,eAAe,CAACM,IAAhB,CAAqBH,uBAAuB,CAACC,CAAD,CAAvB,CAA2BG,OAAhD;AAED;AAEF,GA9BkB,CAgCnB;;;AAEC,OAAK,IAAIC,cAAT,IAA2BR,eAA3B,EAA2C;AACzC,QAAIS,cAAc,GAAGD,cAArB,CADyC,CAEvC;;AACF,SAAK,IAAIJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,cAAc,CAACJ,MAAnC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,YAAM;AAACM,QAAAA,gBAAD;AAAoBC,QAAAA;AAApB,UAAgCF,cAAc,CAACL,CAAD,CAApD;AACDf,MAAAA,OAAO,CAACC,GAAR,CAAYoB,gBAAZ,EAA+BC,QAA/B;AAEA;AAEF;;AACF,sBACE;AAAS,IAAA,SAAS,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKpB,QAAQ,CAACqB,GAAT,CAAaV,OAAO,iBACjB,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAIA,OAAO,CAACW,YAA1B;AAAwC,IAAA,KAAK,EAAIX,OAAO,CAACY,aAAzD;AAAyE,IAAA,KAAK,EAAIZ,OAAO,CAACa,aAA1F;AAA0G,IAAA,MAAM,EAAEb,OAAO,CAACc,EAA1H;AAA8H,IAAA,GAAG,EAAEd,OAAO,CAACc,EAA3I;AAA+I,IAAA,QAAQ,EAAId,OAAO,CAACK,OAAR,CAAgB,CAAhB,EAAmBG,gBAA9K;AAAgM,IAAA,YAAY,EAAIR,OAAO,CAACK,OAAR,CAAgB,CAAhB,EAAmBI,QAAnO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CAFJ,CADF;AAYD;;AAED,eAAexB,IAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport MenuList from './menuList';\nimport './style.css';\n\nfunction Menu(props) {\n  console.log(props)\n    \n  const[products, setProducts] = useState([]);\n\n  useEffect( ()=>{\n    getProducts();\n  }, []);\n\n  const getProducts = async () =>{\n        const url = \"https://surce-delight.herokuapp.com/api/product/all/\";\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log(data);\n        setProducts(data[0].product_variation);\n    \n      }\n  let productContents = []\n  // unpack the products and take all product variations for each product\n  let counter = 0\n  for (let product of products) {\n  \n    let  currentProductVariation = product.product_variation\n  \n    // terrible implemtation, but it works\n    for (var i = 0; i < currentProductVariation.length; i++) {\n      productContents.push(currentProductVariation[i].content)\n  \n    }\n  \n  }\n  \n  // console.log(productContents)\n  \n   for (let productContent of productContents){\n     let currentContent = productContent\n       // i'm really not proud of this implimentation temporary fix.. run time is 0(n^2)\n     for (var i = 0; i < currentContent.length;i++) {\n       const {add_on_item_name , quantity} = currentContent[i]\n      console.log(add_on_item_name , quantity)\n  \n     }\n  \n   }\n  return (\n    <section className=\"our-menu\">\n        <h2>Our Menu</h2>\n        <div className=\"Menu\">\n            {products.map(product => (\n                <MenuList name = {product.product_type} price = {product.current_price}  image = {product.product_image}  itemId={product.id} key={product.id} itemDesc = {product.content[0].add_on_item_name} itemQuantity = {product.content[0].quantity}/>\n                  \n            ))\n            }\n        </div>\n    </section>\n  );\n}\n\nexport default Menu;"]},"metadata":{},"sourceType":"module"}